<?xml version="1.0" encoding="utf-8"?>
<layout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools">

  <data>
  </data>

  <ScrollView
      android:layout_width="match_parent"
      android:layout_height="match_parent"
      android:fillViewport="true"
      app:layout_constraintEnd_toEndOf="parent"
      app:layout_constraintStart_toStartOf="parent"
      app:layout_constraintTop_toBottomOf="parent"
      app:layout_constraintTop_toTopOf="parent">

    <androidx.constraintlayout.widget.ConstraintLayout
        android:id="@+id/mainContainer"
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        android:background="@color/loginBg"
        tools:context=".ui.activity.LoginActivity">


      <androidx.constraintlayout.widget.ConstraintLayout
          android:id="@+id/headingContainer"
          android:layout_width="match_parent"
          android:layout_height="wrap_content"
          app:layout_constraintEnd_toEndOf="parent"
          app:layout_constraintStart_toStartOf="parent"
          app:layout_constraintTop_toTopOf="parent">

        <include
            android:id="@+id/CommonHeader"
            android:layout_width="fill_parent"
            android:layout_height="wrap_content"
            layout="@layout/layout_common_header" />

      </androidx.constraintlayout.widget.ConstraintLayout>


      <androidx.constraintlayout.widget.ConstraintLayout
          android:id="@+id/subContainer"
          android:layout_width="@dimen/dimen0dp"
          android:layout_height="wrap_content"
          android:layout_margin="@dimen/dims_15dp"
          android:background="@drawable/constrain_design"
          android:backgroundTint="@color/white"
          android:padding="@dimen/dimens20dp"
          app:layout_constraintEnd_toEndOf="parent"
          app:layout_constraintHorizontal_bias="1.0"
          app:layout_constraintStart_toStartOf="parent"
          app:layout_constraintTop_toBottomOf="@id/headingContainer"
          app:layout_constraintBottom_toTopOf="@id/tvFooter">

        <com.google.android.material.chip.ChipGroup
            android:id="@+id/chip_group"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            app:singleSelection="true"
            android:orientation="vertical"
            android:layout_marginTop="@dimen/dimens50dp"
            app:layout_constraintTop_toTopOf="parent"
            app:layout_constraintStart_toStartOf="parent"
            app:layout_constraintEnd_toEndOf="parent">

          <com.google.android.material.chip.Chip
              android:id="@+id/chip1"
              style="@style/Entry"
              android:layout_width="match_parent"
              android:layout_height="wrap_content"
              android:textAlignment="center"
              android:text="@string/teacher"/>

          <com.google.android.material.chip.Chip
              android:id="@+id/chip2"
              style="@style/Entry"
              android:layout_width="match_parent"
              android:layout_height="wrap_content"
              android:textAlignment="center"
              android:text="@string/school"/>

          <com.google.android.material.chip.Chip
              android:id="@+id/chip3"
              style="@style/Entry"
              android:textAlignment="center"
              android:layout_width="match_parent"
              android:layout_height="wrap_content"
              android:text="@string/parent"/>

        </com.google.android.material.chip.ChipGroup>

      </androidx.constraintlayout.widget.ConstraintLayout>

      <com.google.android.material.imageview.ShapeableImageView
          android:id="@+id/ImageLogo"
          android:layout_width="@dimen/dimens100dp"
          android:layout_height="@dimen/dimens100dp"
          android:backgroundTint="@color/white"
          android:scaleType="fitXY"
          android:src="@drawable/ic_cube"
          app:layout_constraintBottom_toTopOf="@+id/subContainer"
          app:layout_constraintEnd_toEndOf="@+id/subContainer"
          app:layout_constraintStart_toStartOf="@+id/subContainer"
          app:layout_constraintTop_toTopOf="@+id/subContainer"
          app:shapeAppearance="@style/roundedImageViewRounded" />

      <com.google.android.material.textview.MaterialTextView
          android:id="@+id/tvFooter"
          android:layout_width="wrap_content"
          android:layout_height="wrap_content"
          android:layout_marginTop="@dimen/dimens20dp"
          android:text="@string/ExistingUser"
          android:textColor="@color/tvDescriptionColor"
          android:textSize="@dimen/dimens15sp"
          app:layout_constraintBottom_toBottomOf="parent"
          app:layout_constraintEnd_toStartOf="@id/tvSignUp"
          app:layout_constraintHorizontal_chainStyle="packed"
          app:layout_constraintStart_toStartOf="parent"
          app:layout_constraintTop_toBottomOf="@id/subContainer" />

      <com.google.android.material.textview.MaterialTextView
          android:id="@+id/tvSignUp"
          android:layout_width="wrap_content"
          android:layout_height="wrap_content"
          android:layout_marginStart="@dimen/dimens5dp"
          android:text="@string/footer2"
          android:textColor="@color/white"
          android:textSize="@dimen/dimens15sp"
          android:textStyle="bold"
          app:layout_constraintBottom_toBottomOf="@id/tvFooter"
          app:layout_constraintEnd_toEndOf="parent"
          app:layout_constraintStart_toEndOf="@id/tvFooter"
          app:layout_constraintTop_toTopOf="@id/tvFooter" />

    </androidx.constraintlayout.widget.ConstraintLayout>
  </ScrollView>

</layout>


<!--
val chipGroup = findViewById<ChipGroup>(R.id.chip_group)
chipGroup.setOnCheckedChangeListener { group, checkedId ->
    for (i in 0 until group.childCount) {
        val chip = group.getChildAt(i) as Chip
        if (chip.id == checkedId) {
            chip.chipStrokeColor = ContextCompat.getColor(this, R.color.yellow)
        } else {
            chip.chipStrokeColor = ContextCompat.getColor(this, R.color.black)
        }
    }

-->